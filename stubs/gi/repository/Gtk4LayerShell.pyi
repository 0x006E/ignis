from gi.repository import GObject
from gi.repository import Gdk
from gi.repository import Gtk

_lock = ...  # FIXME Constant
_namespace: str = "Gtk4LayerShell"
_version: str = "1.0"

def auto_exclusive_zone_enable(window: Gtk.Window) -> None: ...
def auto_exclusive_zone_is_enabled(window: Gtk.Window) -> bool: ...
def get_anchor(window: Gtk.Window, edge: Edge) -> bool: ...
def get_exclusive_zone(window: Gtk.Window) -> int: ...
def get_keyboard_mode(window: Gtk.Window) -> KeyboardMode: ...
def get_layer(window: Gtk.Window) -> Layer: ...
def get_major_version() -> int: ...
def get_margin(window: Gtk.Window, edge: Edge) -> int: ...
def get_micro_version() -> int: ...
def get_minor_version() -> int: ...
def get_monitor(window: Gtk.Window) -> Gdk.Monitor: ...
def get_namespace(window: Gtk.Window) -> str: ...
def get_protocol_version() -> int: ...
def get_zwlr_layer_surface_v1(window: Gtk.Window) -> None: ...
def init_for_window(window: Gtk.Window) -> None: ...
def is_layer_window(window: Gtk.Window) -> bool: ...
def is_supported() -> bool: ...
def set_anchor(window: Gtk.Window, edge: Edge, anchor_to_edge: bool) -> None: ...
def set_exclusive_zone(window: Gtk.Window, exclusive_zone: int) -> None: ...
def set_keyboard_mode(window: Gtk.Window, mode: KeyboardMode) -> None: ...
def set_layer(window: Gtk.Window, layer: Layer) -> None: ...
def set_margin(window: Gtk.Window, edge: Edge, margin_size: int) -> None: ...
def set_monitor(window: Gtk.Window, monitor: Gdk.Monitor) -> None: ...
def set_namespace(window: Gtk.Window, name_space: str) -> None: ...

class Edge(GObject.GEnum):  # type: ignore
    BOTTOM = 3
    ENTRY_NUMBER = 4
    LEFT = 0
    RIGHT = 1
    TOP = 2

class KeyboardMode(GObject.GEnum):  # type: ignore
    ENTRY_NUMBER = 3
    EXCLUSIVE = 1
    NONE = 0
    ON_DEMAND = 2

class Layer(GObject.GEnum):  # type: ignore
    BACKGROUND = 0
    BOTTOM = 1
    ENTRY_NUMBER = 4
    OVERLAY = 3
    TOP = 2
